%% LyX 2.2.1 created this file.  For more info, see http://www.lyx.org/.
%% Do not edit unless you really know what you are doing.
\documentclass{article}
\usepackage[sc]{mathpazo}
\usepackage[T1]{fontenc}
\usepackage{geometry}
\geometry{verbose,tmargin=2.5cm,bmargin=2.5cm,lmargin=2.5cm,rmargin=2.5cm}
\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{2}
\usepackage{url}
\usepackage[unicode=true,pdfusetitle,
 bookmarks=true,bookmarksnumbered=true,bookmarksopen=true,bookmarksopenlevel=2,
 breaklinks=false,pdfborder={0 0 1},backref=false,colorlinks=false]
 {hyperref}
\hypersetup{
 pdfstartview={XYZ null null 1}}
\usepackage{breakurl}

%%%%%%% added packaged ###########
\usepackage{float}
\usepackage[OT1]{fontenc}
\usepackage{color}
\usepackage{afterpage}
%\usepackage{hyperref}
\usepackage{graphicx}
\usepackage{rotating}
\usepackage{ amssymb }
\usepackage{url}
\usepackage{amsmath}
\usepackage{ tipa }
\hypersetup{pdfstartview={XYZ null null 1}}
%\usepackage{breakurl}
\usepackage[sc]{mathpazo}
\usepackage[T1]{fontenc}
\usepackage{geometry}
%\geometry{ hmargin=3cm, vmargin=2.5cm }
\renewcommand{\baselinestretch}{1.5} 
\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{2}
\usepackage{float}
\usepackage[OT1]{fontenc}
\usepackage{color}
\usepackage{afterpage}
\usepackage{adjustbox,lipsum}
%\usepackage{hyperref}
\usepackage{graphicx}
\usepackage{rotating}
\usepackage{longtable}
\usepackage{bm}

\usepackage{url}

%%% addtional  headers from  http://haozhu233.github.io/kableExtra/awesome_table_in_pdf.pdf
\usepackage{booktabs}
\usepackage{longtable}
\usepackage{array}
\usepackage{multirow}
\usepackage{wrapfig}
\usepackage{float}
\usepackage{colortbl}
\usepackage{pdflscape}
\usepackage{tabu}
\usepackage{threeparttable}
\usepackage{threeparttablex}
\usepackage[normalem]{ulem}
\usepackage{makecell}
\usepackage{xcolor}


%%%%%%%%%%%%%%%%%%


\begin{document}
<<setup, include=FALSE, cache=FALSE>>=
library(knitr)
library(xtable)
library(kableExtra)
# set global chunk options
opts_chunk$set(fig.path='figure/minimal-', fig.align='center', fig.show='hold')
options(formatR.arrow=TRUE,width=90)



@

<<loadingPackages, include=FALSE, cache=FALSE>>=
# add global filter here ----

library(visNetwork)
library(ggplot2)
library(dplyr)
library(plotly)
library(extrafont)
library(rpart)
library(RColorBrewer)
library(webshot) # for plot export
library(ggthemes)
library(lubridate)
library(Hmisc)
library(gdata)
library(scales)
library(EpiEstim)
library(incidence)
library(tidyr)
library(DT)  

library(rgdal)
library(maps)
library(maptools)
library(mapdata)
library(ggplot2)
library(foreign)    
library(sp)
library(broom)
library(stringi)

library(ggmap)
library(rgeos)
library(tmap)
#library(sf)
library(lattice)
library(RPostgreSQL)
library(igraph)
library(leaflet)
library(fitdistrplus) 
library(tidyverse)

@

\title{Disease Situation Report}

\author{Generated by SORMAS}

\maketitle


\noindent Since \today, the Robert Koch Institute (RKI) has been publishing the English version of the COVID-19
situation reports for Germany on a weekly basis. Information on the daily epidemiological situation is
available on the RKI’s online COVID-19 dashboard. In addition, the RKI’s website provides daily situation
reports in German, information on vaccination data and from the intensive care registry, as well as other
regularly uploaded data. [Information sources at provided at the end of this report]. 
\newline

\noindent The following information is provided in this situation report: Overview on the epidemiological situation,
demographic distribution of cases, surveys on laboratory tests of SARS-CoV-2 in Germany, and information
from additional RKI-based surveillance systems.



\section*{The current epidemiological situation in Germany}



<<globalIndicators, echo=FALSE >>=
# add all functions to compute global indicators here an returned a table
setwd("/home/bsi17/SORMAS-Stats-next-gen/sormas-stats-sitrep")

@

<<globalFunctions, echo=FALSE >>=
# add all functions to compute global indicators here an returned a table
cuntbyRegionDistrictCase = function(data, byRegion = TRUE){  # depends on factorLevelCount function
  rowTtotal = factorLevelCount(data = data, rowName = "Global")  #forst row on table containing total counts for all regions
  
  if(byRegion == FALSE){
    districtName = unique(data$district_name) 
    for(i in districtName){
      tempData = data[data$district_name == i,]
      rowTtotal = rbind(rowTtotal, factorLevelCount(data = tempData, rowName = i))
    }
  }else{
    regionName = unique(data$region_name)
    for(i in regionName){
      tempData = data[data$region_name == i,]
      rowTtotal = rbind(rowTtotal, factorLevelCount(data = tempData, rowName = i) )
    }
    
  }
  
  countByRegionVaribles = rowTtotal[order(rowTtotal$Total, decreasing = T), ]
  countByRegionVaribles$CONFIRMED = countByRegionVaribles$CONFIRMED
  countByRegionVaribles = countByRegionVaribles %>%
    dplyr::mutate(CONFIRMED = CONFIRMED+ CONFIRMED_NO_SYMPTOMS+ CONFIRMED_UNKNOWN_SYMPTOMS ) %>%
    dplyr::select(-CONFIRMED_NO_SYMPTOMS, -CONFIRMED_UNKNOWN_SYMPTOMS  )
  countByRegionVaribles = countByRegionVaribles %>% 
    dplyr::rename(Total_last24hrs  = nlast24hrs, confirmed = CONFIRMED,  Unclassified = NOT_CLASSIFIED, Probable=PROBABLE, Suspected=SUSPECT,
                  Deseased =DECEASED, No_Outcome= NO_OUTCOME, Recovered = RECOVERED, UnK_Outcome =UNKNOWN, In_Country =IN_COUNTRY, Imported = POINT_OF_ENTRY,
                  Home_Q=HOME, Institutional_Q=INSTITUTIONELL, No_Q=NONE, Other_Q=OTHER, Unk_Q=UNKNOWN.1 )
  
  return(countByRegionVaribles)
}
##
factorLevelCount = function(data,  rowName){ #takes a data and rerun the counts of the variables in the function
  Name = rowName
  Total = nrow(data)
  nlast24hrs = nrow(data[data$reportdate %in% c(Sys.Date()-1, Sys.Date()), ])
  caseByClassTotal = data.frame(t(as.matrix( table(factor(data$caseclassification, levels = c("CONFIRMED", "CONFIRMED_NO_SYMPTOMS", "CONFIRMED_UNKNOWN_SYMPTOMS",
                                                                                              "NOT_CLASSIFIED", "PROBABLE", "SUSPECT") ) ) )))
  caseByOutcomeTotal = data.frame(t(as.matrix( table(factor(data$outcome, levels = c("DECEASED","NO_OUTCOME","RECOVERED","UNKNOWN") )) )))
  caseByQuarantineTotal = data.frame(t(as.matrix( table(factor(data$quarantine, levels =  c("HOME","INSTITUTIONELL","NONE","OTHER","UNKNOWN") )) )))
  caseByOriginTotal = data.frame(t(as.matrix( table(factor(data$caseorigin, levels = c("IN_COUNTRY","POINT_OF_ENTRY"))) )))
  globalCount = data.frame(Name,Total, nlast24hrs, caseByClassTotal, caseByOutcomeTotal, caseByOriginTotal, caseByQuarantineTotal)
  return(globalCount)
}

@


\begin{table}[H]
\centering
\begin{tabular}{lccccccr}
  \multicolumn{4}{c}{\textbf{Total (cummulative)}} &  \multicolumn{4}{c}{\textbf{Previous 7 days}} \\ 
    \hline
 Confirmed & Deaths & Recovered & quarantine &   Confirmed & Deaths & Recovered & Quarantine  \\ 
100 & 100 & 100 & 100 & -100 & 100 & 100 & 100  \\ 
100 & 100 & 100 & 100 & -100 & 100 & 100 & 100  \\ 
100 & 100 & 100 & 100 & -100 & 100 & 100 & 100  \\ 
  \hline
\end{tabular}
\caption{Table showing ........} 
\end{table}

As of \textbf{29/04/2021, 3,357,268} laboratory-confirmed COVID-19 cases as well as \textbf{82,544} deaths associated with COVID-19 were shared with the RKI. The current national 7-day incidence is \textbf{155} cases per 100,000
population. Since \textbf{26/12/2020}, a total of \textbf{27,803,779} people in Germany have been vaccinated at least once (vaccination uptake \textbf{25.9\%}) and, of those, \textbf{6,241,152} people have been vaccinated twice against COVID-19 (vaccination
uptake \textbf{7.5\%}).
On \textbf{29/04/2021 (12:15 PM), 5,030} patients with COVID-19 were in intensive care. \textbf{+471} patients with COVID-19 were newly admitted. The resulting number of cases under treatment was -17 compared to the prior
day. \textbf{+119} patients with COVID-19 died in ICU since the previous day.


\subsection*{Geographical distribution of cases}

<<cacesByRegion, echo=FALSE >>=
# table showeing the nmber of cases by region
load("/home/bsi17/SORMAS-Stats-next-gen/sormas-stats-sitrep/casePersonRegionDist.RData")

countByRegion = cuntbyRegionDistrictCase(data = casePersonRegionDist, byRegion = TRUE )
#xtable(countByRegion)
kbl(countByRegion[, c(1:11)], booktabs = T, caption = "Case count by region") %>%  #longtable = T
kable_styling(latex_options = c("striped", "scale_down"), font_size = 12, position = "center")


kbl(countByRegion[, c(1,2,12:18)], booktabs = T, caption = "Case count by region") %>%  #longtable = T
kable_styling(latex_options = c("striped", "scale_down"), font_size = 12)



countByDostrict = cuntbyRegionDistrictCase(data = casePersonRegionDist, byRegion = TRUE )
kbl(countByDostrict[, c(1:11)], booktabs = T, caption = "Case count by district") %>%  #longtable = T
kable_styling(latex_options = c("striped", "scale_down"), font_size = 12)


kbl(countByDostrict[, c(1,2,12:18)], booktabs = T, caption = "Case count by district") %>%  #longtable = T
kable_styling(latex_options = c("striped", "scale_down"), font_size = 12)

@







\noindent Add text and figure/ table here

\subsection*{Distribution of cases over time}
\noindent Add text and figure/ table here

\subsection*{Demographic distribution of cases}
The age-specific 7-day incidence is shown using a heat map (Figure ???).

\subsection*{Clinical aspects of cases}


\subsection*{Information on laboratory tests of samples}

\noindent Add text and figure/ table here


\subsection*{Additional survaillance indicators}

\noindent Add text and figure/ table here







% \noindent The first element of \texttt{x} is \Sexpr{x[1]}. Boring boxplots
% and histograms recorded by the PDF device:

\section*{Additional information}

For more information, viist the RKI home page: \url{https://www.rki.de/EN/Home/homepage_node.html;jsessionid=D28522F832A5E3D18A7A1D1FFF7337B7.internet052}. \\
If you want to have more indicatore added to this report or ecpericneced a problem, contact the SORMAS team \url{https://github.com/hzi-braunschweig}.

\end{document}